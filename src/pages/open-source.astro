---
import { timeAgo } from "@guardian/libs";
import PageLayout from "../layouts/page.astro";
import { Markdown } from "astro/components";

import { border } from "../styles/shared.ts";

const reposUrl = `https://api.github.com/orgs/guardian/repos?per_page=100&sort=updated&direction=desc`;
const reposRaw: Array<{
  name: string;
  description: string;
  html_url: string;
  stargazers_count: number;
  archived: boolean;
  updated_at: string;
}> = await fetch(reposUrl).then((r) => r.json());

/**
 * A mix of recently updated a most stargazed repos
 */
const repos = reposRaw
  .filter((repo) => !repo.archived)
  .sort(
    (a, b) =>
      new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()
  )
  .slice(0, 21)
  .sort((a, b) => b.stargazers_count - a.stargazers_count)
  .slice(0, 10);
---

<PageLayout title="Open Source" edit="open-source.astro">
  <section id="source">
    <Markdown>
      # Open Source

      We at the Guardian try to be [as open and transparent as possible](https://www.theguardian.com/info/developer-blog/2014/nov/28/developing-in-the-open). 
      That means developing in public repositories where anyone can see our work. You can explore our
      source code on [GitHub](https://github.com/guardian).

      ## What we work with

      ### Languages

      - [Scala](https://www.scala-lang.org/)
      - [Kotlin](https://kotlinlang.org/)
      - [JavaScript](https://www.javascript.com/)
      - [TypeScript](https://www.typescriptlang.org/)
      - [Python](https://www.python.org/)

      ### Frameworks

      - [React](https://reactjs.org/)
      - [Preact](https://preactjs.com/)
      - [Play](https://www.playframework.com/)
      - [Astro](https://astro.build/)

      ### Tools

      - [Storybook](https://storybook.js.org/)
      - [Elasticsearch](https://www.elastic.co/)

      There are plenty more where these came from, but they are good starting points. And if you want to
      see our code in action...

      ## Hereâ€™s 10 recently updated repositories:
    </Markdown>

    <ol>
      {repos.map((repo) => {
        return (
          <li>
            <a href={repo.html_url}>
              <h4>{repo.name}</h4>
              <h5>
                ({repo.stargazers_count} stars - updated{" "}
                {timeAgo(repo.updated_at, {
                  daysUntilAbsolute: 1,
                })}
                )
              </h5>
              <p>{repo.description}</p>
            </a>
          </li>
        );
      })}
    </ol>
  </section>
</PageLayout>

<style lang="scss" define:vars={{ border }}>
  section {
    padding: 0 1rem;

    // All but the first section
    &:nth-of-type(n + 2) {
      border-top: var(--border);
    }

    p,
    ul {
      max-width: 36rem;
    }
  }

  hr {
    border: none;
    border-top: var(--border);
  }

  #source {
    ol {
      li {
        padding-bottom: 1rem;
        a {
          display: block;
          max-width: 36rem;
          padding: 0.5rem;
          background-color: #333;

          color: inherit;
          text-decoration: none;

          h4 {
            color: gold;
          }
          h4,
          h5 {
            display: inline;
          }

          p {
            flex-basis: 100%;
            padding-top: 0.5rem;
            margin: 0;
          }
        }
      }
    }
  }
</style>
